CREATE TABLE Movie (
  ID INTEGER PRIMARY KEY,
  Title TEXT,
  MediaTypeId INTEGER, 
  FOREIGN KEY(MediaTypeId) REFERENCES MediaType(MediaTypeId)
);

INSERT INTO Movie ( Title, MediaTypeId ) VALUES ( "Aladdin", 3 );

ALTER TABLE Movie ADD COLUMN GenreId INTEGER REFERENCES Genre(GenreId); -- add foreign key to existing table

UPDATE Movie SET GenreId=22 WHERE id=1; -- update entry

SELECT a.title, ar.Name
FROM Album a 
JOIN Artist ar ON a.ArtistId = ar.ArtistId; -- Join the Artist and Album tables to list out the Artist name and Album name

SELECT * FROM Track 
WHERE GenreId IN ( SELECT GenreId FROM Genre WHERE Name = 'Jazz' OR Name = 'Blues' ); -- Use a sub-select statement to get all tracks from the Track table where the GenreId is either Jazz or Blues.

UPDATE Employee SET Phone = null WHERE EmployeeId = 1; -- Update Phone on the Employee table to null where the EmployeeId is 1.

SELECT * from Customer WHERE Company IS null; -- Query null: Get all customers from the Customer table who do not have a company.

SELECT ar.artistId, ar.name, count(*) 
FROM Artist ar
JOIN Album a ON ar.ArtistId = a.ArtistId 
GROUP BY ar.artistId; -- Group by: Select all artist ids, artist names, and count how many albums they have.

/* The delete won't work since they are children using a foreign key. However, if there wasn't a foreign key, you would successfully delete all Customers WHERE Fax is null */
DELETE FROM Customers WHERE Fax IS null;